#!/bin/bash

# chkconfig: 345 95 20

JSVC=/usr/bin/jsvc
NAME=pz-discover
VERSION=current
PID_DIR=/var/run
PID_FILE=$PID_DIR/$NAME.pid
LOG_DIR=/var/log/$NAME
LOG_FILE=$LOG_DIR/$NAME-out.log
ERR_FILE=$LOG_DIR/$NAME-error.log
INSTALL_DIR=/opt/pz-discover
CONFIG_FILE=$INSTALL_DIR/pz-discover.conf
INSTALL_JAR=$INSTALL_DIR/"$NAME"-"$VERSION".jar
JAVA_HOME=/usr/lib/jvm/jre
mkdir -p $PID_DIR
test -d $LOG_DIR || mkdir $LOG_DIR

# explicitly set LANG to utf-8
# a dependency seems to need it to determine a default charset
export LANG=en_US.UTF-8

# returns 0 if PID in file is running, 1 if otherwise
process_running() {
        pid=`cat "$PID_FILE" 2>/dev/null`
        if [ "$pid" = '' ]
        then
                return 1 # PID file does not exist
        else
                kill_report=`kill -0 $pid 2>&1`
                if [ "$kill_report" = '' ]
                then
                        return 0
                else
                        echo "Stale PID file exists at $PID_FILE"
                        return 1
                fi
        fi
}

start() {
        if process_running
        then
                echo "$NAME is already running as process `cat $PID_FILE`."
                exit 1
        fi
        echo "Starting $NAME"
        $JSVC -java-home "$JAVA_HOME" \
              -procname $NAME \
              -server \
              -cp "$INSTALL_JAR" \
              -outfile "$LOG_FILE" \
              -errfile "$ERR_FILE" \
              -pidfile "$PID_FILE" \
              pz-discover.core -c $CONFIG_FILE
        exit 0
}

stop() {
        if ! process_running
        then
                echo "$NAME is not running."
        else
                echo "Shutting down $NAME"
                $JSVC -stop \
                      -java-home "$JAVA_HOME" \
                      -cp "$INSTALL_JAR" \
                      -outfile "$LOG_FILE" \
                      -errfile "$ERR_FILE" \
                      -pidfile "$PID_FILE" \
                      pz-discover.core -c $CONFIG_FILE
        fi
}

force-stop() {
        if ! process_running
        then
                echo "$NAME is not running."
        else
                echo "Forcefully shutting down $NAME"
                kill -9 `cat $PID_FILE`
                rm $PID_FILE
        fi
}

status() {
        if process_running
        then
                echo "$NAME is running."
        else
                echo "$NAME is not running."
                exit 3
        fi
        exit 0
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    force-stop)
        force-stop
        ;;
    status)
        status
        ;;
    restart)
    stop
        start
        ;;
    *)
        echo "Usage: "$NAME"d {start|stop|status|restart|force-stop}"
        exit 1
        ;;
esac
exit $?
